{"ast":null,"code":"import _objectSpread from \"/home/thayrone/dev/Readble/leitura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as api from '../http'; // actions variables\n\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS';\nexport const RECEIVE_POST = \"RECEIVE_POST\"; // actions functions\n\nexport function receivePosts(posts) {\n  return {\n    type: RECEIVE_POSTS,\n    posts\n  };\n}\nexport const handleInitialData = category => {\n  return dispatch => {\n    return api.getPosts(category).then(posts => dispatch(receivePosts(posts)));\n  };\n};\nexport const addPost = post => {\n  post = _objectSpread({}, post, {\n    timestamp: Date.now()\n  });\n  return dispatch => {\n    return api.addPost(post).then(post => api.getPosts(post.category).then(posts => dispatch({\n      type: RECEIVE_POSTS,\n      posts\n    })));\n  };\n};\nexport const fetchPost = id => {\n  return dispatch => {\n    return api.fetchPost(id).then(post => {\n      dispatch({\n        type: RECEIVE_POST,\n        post\n      });\n    });\n  };\n};\nexport const editPost = post => {\n  console.log('POST', post);\n  return dispatch => {\n    return api.editPost(post).then(post => api.getPosts(post.category).then(posts => dispatch({\n      type: RECEIVE_POSTS,\n      posts\n    })));\n  };\n};\nexport const deletePost = post => {\n  console.log('id', post);\n  return dispatch => {\n    return api.deletePost(post).then(post => api.getPosts().then(posts => dispatch({\n      type: RECEIVE_POSTS,\n      posts\n    })));\n  };\n};\nexport const votePost = (id, option) => {\n  return dispatch => {\n    return api.votePost(id, option).then(post => {\n      console.log('post', post);\n      api.getPosts().then(posts => dispatch({\n        type: RECEIVE_POSTS,\n        posts\n      }));\n    });\n  };\n};\nexport const votePostDetail = (id, option) => {\n  console.log('ID', id);\n  console.log('OPTION', option);\n  return dispatch => {\n    return api.votePost(id, option).then(post => {\n      api.fetchPost(id).then(post => dispatch({\n        type: RECEIVE_POST,\n        post\n      }));\n    });\n  };\n};","map":{"version":3,"sources":["/home/thayrone/dev/Readble/leitura/src/actions/posts.js"],"names":["api","RECEIVE_POSTS","RECEIVE_POST","receivePosts","posts","type","handleInitialData","category","dispatch","getPosts","then","addPost","post","timestamp","Date","now","fetchPost","id","editPost","console","log","deletePost","votePost","option","votePostDetail"],"mappings":"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","sourcesContent":["import * as api from '../http'\n\n// actions variables\n\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS'\nexport const RECEIVE_POST = \"RECEIVE_POST\";\n\n\n// actions functions\n\nexport function receivePosts (posts) {\n\treturn {\n\ttype: RECEIVE_POSTS,\n\tposts\n}}\n\nexport const handleInitialData = category => {\n  return dispatch => {\n    return api.getPosts(category).then(posts =>\n      dispatch(receivePosts(posts))\n    );\n  };\n};\n\nexport const addPost = post => {\n  post = {\n    ...post,\n    timestamp: Date.now()\n  };\n\n  return dispatch => {\n    return api.addPost(post).then(post =>\n      api.getPosts(post.category).then(posts =>\n        dispatch({\n          type: RECEIVE_POSTS,\n          posts\n        })\n      )\n    );\n  };\n};\n\nexport const fetchPost = id => {\n  return dispatch => {\n    return api.fetchPost(id).then(post =>{\n      dispatch({\n        type: RECEIVE_POST,\n        post\n      })\n    }\n    );\n  };\n};\n\nexport const editPost = post => {\n  console.log('POST', post)\n  return dispatch => {\n    return api.editPost(post).then(post =>\n      api.getPosts(post.category).then(posts =>\n        dispatch({\n          type: RECEIVE_POSTS,\n          posts\n        })\n      )\n    );\n  };\n};\n\nexport const deletePost = post => {\n  console.log('id', post)\n  return dispatch => {\n    return api.deletePost(post).then(post =>\n      api.getPosts().then(posts =>\n        dispatch({\n          type: RECEIVE_POSTS,\n          posts\n        })\n      )\n    );\n  };\n};\n\nexport const votePost = (id, option) => {\n  return dispatch => {\n    return api.votePost(id, option).then(post =>\n    {\n      console.log('post', post)\n      api.getPosts().then(posts =>\n      dispatch({\n        type: RECEIVE_POSTS,\n        posts\n      })\n    )}\n    );\n  };\n};\n\nexport const votePostDetail = (id, option) => {\n  console.log('ID', id)\n  console.log('OPTION', option)\n  return dispatch => {\n    return api.votePost(id, option).then(post =>\n  {\n    api.fetchPost(id).then(post =>\n    dispatch({\n      type: RECEIVE_POST,\n      post\n    })\n  )}\n    );\n  };\n};"]},"metadata":{},"sourceType":"module"}