{"ast":null,"code":"var _jsxFileName = \"/home/thayrone/dev/Readble/leitura/src/components/Comment.js\";\nimport React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom';\nimport { fetchComments, addComment, deleteComment, voteComment, editComment } from '../actions/comments';\nimport { connect } from 'react-redux';\nimport CommnetBody from './ComentBody';\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n    marginTop: 100\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)'\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize\n  },\n  block: {\n    display: 'block'\n  },\n  addUser: {\n    marginRight: theme.spacing(1)\n  },\n  contentWrapper: {\n    margin: '40px 16px'\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: 'none'\n  }\n});\n\nclass Comment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      author: 'Anonimous',\n      body: '',\n      parentId: ''\n    };\n  }\n\n  componentWillMount() {\n    const pathArray = window.location.pathname.split('/');\n    const param = pathArray[pathArray.length - 1];\n    this.setState({\n      parentId: param\n    });\n    this.props.fetchComments(param);\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const commentList = Object.values(this.props.comments).map(c => {\n      let aux = Object.assign({\n        isEdit: false\n      }, c);\n      return aux;\n    });\n    return React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      className: classes.searchBar,\n      position: \"static\",\n      color: \"default\",\n      elevation: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      onChange: e => this.setState({\n        body: e.target.value\n      }),\n      value: this.state.body,\n      placeholder: \"Adicione um comentario\",\n      InputProps: {\n        disableUnderline: true,\n        className: classes.searchInput\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.props.addComment(this.state),\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.addUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Add Comment\"))))), Object.keys(this.props.comments).length > 0 ? commentList.map(c => {\n      return React.createElement(\"div\", {\n        key: c.id,\n        className: classes.contentWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(CommnetBody, {\n        voteComment: this.props.voteComment,\n        deleteComment: this.props.deleteComment,\n        editComment: this.props.editComment,\n        c: c,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }));\n    }) : React.createElement(Typography, {\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"NO COMMENTS\"));\n  }\n\n}\n\nfunction mapStateToProps({\n  comments\n}) {\n  return {\n    comments: comments\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchComments: id => dispatch(fetchComments(id)),\n  addComment: comment => dispatch(addComment(comment)),\n  deleteComment: comment => dispatch(deleteComment(comment)),\n  voteComment: (id, option) => dispatch(voteComment(id, option)),\n  editComment: comment => dispatch(editComment(comment))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(Comment)));","map":{"version":3,"sources":["/home/thayrone/dev/Readble/leitura/src/components/Comment.js"],"names":["React","Component","AppBar","Toolbar","Typography","Paper","Grid","Button","TextField","withStyles","withRouter","fetchComments","addComment","deleteComment","voteComment","editComment","connect","CommnetBody","styles","theme","paper","maxWidth","margin","overflow","marginTop","searchBar","borderBottom","searchInput","fontSize","typography","block","display","addUser","marginRight","spacing","contentWrapper","button","input","Comment","state","author","body","parentId","componentWillMount","pathArray","window","location","pathname","split","param","length","setState","props","render","classes","commentList","Object","values","comments","map","c","aux","assign","isEdit","e","target","value","disableUnderline","className","keys","id","mapStateToProps","mapDispatchToProps","dispatch","comment","option"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport {withRouter} from 'react-router-dom'\nimport { fetchComments, addComment, deleteComment, voteComment, editComment} from '../actions/comments'\nimport { connect } from 'react-redux'\nimport CommnetBody from './ComentBody'\n\n\n\n\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n    marginTop: 100\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize,\n  },\n  block: {\n    display: 'block',\n  },\n  addUser: {\n    marginRight: theme.spacing(1),\n  },\n  contentWrapper: {\n    margin: '40px 16px',\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  input: {\n    display: 'none',\n  },\n});\n\nclass Comment extends Component {\n\n  state={\n    author: 'Anonimous',\n    body: '',\n    parentId: ''\n  }\n\n  componentWillMount(){\n    const pathArray = window.location.pathname.split('/');\n    const param = pathArray[pathArray.length - 1];\n    this.setState({\n      parentId: param\n    })\n    this.props.fetchComments(param)\n  }\n\n  render(){\n    const { classes } = this.props;\n\n    const commentList = Object.values(this.props.comments).map(c => {\n      let aux =  Object.assign({isEdit: false}, c)\n     \n      return aux\n    })\n      return (\n        <Paper className={classes.paper}>\n          <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\n            <Toolbar>\n              <Grid container spacing={2} alignItems=\"center\">\n                <Grid item xs>\n                  <TextField\n                    fullWidth\n                    onChange={(e)=> this.setState({\n                      body: e.target.value\n                    })}\n                    value={this.state.body}\n                    placeholder=\"Adicione um comentario\"\n                    InputProps={{\n                      disableUnderline: true,\n                      className: classes.searchInput,\n                    }}\n                  />\n                </Grid>\n                <Grid item>\n                  <Button onClick={() => this.props.addComment(this.state)} variant=\"contained\" color=\"primary\" className={classes.addUser}>\n                    Add Comment\n                  </Button>\n                </Grid>\n              </Grid>\n            </Toolbar>\n          </AppBar> \n          {\n            Object.keys(this.props.comments).length > 0 ?\n            commentList.map( c => {\n              return  <div  key={c.id} className={classes.contentWrapper}>\n                  <CommnetBody \n                  voteComment={this.props.voteComment} \n                  deleteComment={this.props.deleteComment}\n                  editComment={this.props.editComment}\n                  c = {c}\n                  />\n              </div>\n            })\n             :\n           <Typography  color=\"textSecondary\">\n            NO COMMENTS\n         </Typography>\n          }     \n         \n        </Paper>     \n      );\n  }\n}\n\nfunction mapStateToProps ({ comments }) {\n  return {\n    comments: comments,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchComments: id => dispatch(fetchComments(id)),\n  addComment: comment => dispatch(addComment(comment)),\n  deleteComment: comment => dispatch(deleteComment(comment)),\n  voteComment: (id, option) => dispatch(voteComment(id, option)),\n  editComment: comment => dispatch(editComment(comment)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter( withStyles(styles)(Comment)))\n\n"]},"metadata":{},"sourceType":"module"}