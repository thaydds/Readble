{"ast":null,"code":"import _objectSpread from \"/home/thayrone/dev/Readble/leitura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport uuid from \"uuid\";\nimport * as api from '../http';\nexport const RECEIVE_COMMENTS = \"RECEIVE_COMMENTS\";\nexport const RECEIVE_COMMENT = \"RECEIVE_COMMENT\";\nexport const fetchComments = id => {\n  return dispatch => {\n    return api.fetchComments(id).then(comments => dispatch({\n      type: RECEIVE_COMMENTS,\n      comments\n    }));\n  };\n};\nexport const fetchComment = id => {\n  return dispatch => {\n    return api.fetchComment(id).then(comment => dispatch({\n      type: RECEIVE_COMMENT,\n      comment\n    }));\n  };\n};\nexport const voteComment = (id, option) => {\n  return dispatch => {\n    return api.voteComment(id, option).then(comment => api.fetchComments(comment.parentId).then(comments => dispatch({\n      type: RECEIVE_COMMENTS,\n      comments\n    })));\n  };\n};\nexport const addComment = comment => {\n  comment = _objectSpread({}, comment, {\n    id: uuid.v4(),\n    timestamp: Date.now()\n  });\n  return dispatch => {\n    return api.addComment(comment).then(comment => api.fetchComments(comment.parentId).then(comments => dispatch({\n      type: RECEIVE_COMMENTS,\n      comments\n    })));\n  };\n};\nexport const deleteComment = comment => {\n  return dispatch => {\n    return api.deleteComment(comment).then(comment => api.fetchComments(comment.parentId).then(comments => dispatch({\n      type: RECEIVE_COMMENTS,\n      comments\n    })));\n  };\n};\nexport const editComment = comment => {\n  return dispatch => {\n    return api.editComment(comment).then(comment => api.fetchComments(comment.parentId).then(comments => dispatch({\n      type: RECEIVE_COMMENTS,\n      comments\n    })));\n  };\n};","map":{"version":3,"sources":["/home/thayrone/dev/Readble/leitura/src/actions/comments.js"],"names":["uuid","api","RECEIVE_COMMENTS","RECEIVE_COMMENT","fetchComments","id","dispatch","then","comments","type","fetchComment","comment","voteComment","option","parentId","addComment","v4","timestamp","Date","now","deleteComment","editComment"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAO,KAAKC,GAAZ,MAAoB,SAApB;AACA,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,aAAa,GAAGC,EAAE,IAAI;AACjC,SAAOC,QAAQ,IAAI;AACjB,WAAOL,GAAG,CAACG,aAAJ,CAAkBC,EAAlB,EAAsBE,IAAtB,CAA2BC,QAAQ,IACxCF,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,gBADC;AAEPM,MAAAA;AAFO,KAAD,CADH,CAAP;AAMD,GAPD;AAQD,CATM;AAWP,OAAO,MAAME,YAAY,GAAGL,EAAE,IAAI;AAChC,SAAOC,QAAQ,IAAI;AACjB,WAAOL,GAAG,CAACS,YAAJ,CAAiBL,EAAjB,EAAqBE,IAArB,CAA0BI,OAAO,IACtCL,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,eADC;AAEPQ,MAAAA;AAFO,KAAD,CADH,CAAP;AAMD,GAPD;AAQD,CATM;AAWP,OAAO,MAAMC,WAAW,GAAG,CAACP,EAAD,EAAKQ,MAAL,KAAgB;AACzC,SAAOP,QAAQ,IAAI;AACjB,WAAOL,GAAG,CAACW,WAAJ,CAAgBP,EAAhB,EAAoBQ,MAApB,EAA4BN,IAA5B,CAAiCI,OAAO,IAC7CV,GAAG,CAACG,aAAJ,CAAkBO,OAAO,CAACG,QAA1B,EAAoCP,IAApC,CAAyCC,QAAQ,IAC/CF,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,gBADC;AAEPM,MAAAA;AAFO,KAAD,CADV,CADK,CAAP;AAQD,GATD;AAUD,CAXM;AAaP,OAAO,MAAMO,UAAU,GAAGJ,OAAO,IAAI;AACnCA,EAAAA,OAAO,qBACFA,OADE;AAELN,IAAAA,EAAE,EAAEL,IAAI,CAACgB,EAAL,EAFC;AAGLC,IAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAHN,IAAP;AAMA,SAAOb,QAAQ,IAAI;AACjB,WAAOL,GAAG,CAACc,UAAJ,CAAeJ,OAAf,EAAwBJ,IAAxB,CAA6BI,OAAO,IACzCV,GAAG,CAACG,aAAJ,CAAkBO,OAAO,CAACG,QAA1B,EAAoCP,IAApC,CAAyCC,QAAQ,IAC/CF,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,gBADC;AAEPM,MAAAA;AAFO,KAAD,CADV,CADK,CAAP;AAQD,GATD;AAUD,CAjBM;AAmBP,OAAO,MAAMY,aAAa,GAAGT,OAAO,IAAI;AACtC,SAAOL,QAAQ,IAAI;AACjB,WAAOL,GAAG,CAACmB,aAAJ,CAAkBT,OAAlB,EAA2BJ,IAA3B,CAAgCI,OAAO,IAC5CV,GAAG,CAACG,aAAJ,CAAkBO,OAAO,CAACG,QAA1B,EAAoCP,IAApC,CAAyCC,QAAQ,IAC/CF,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,gBADC;AAEPM,MAAAA;AAFO,KAAD,CADV,CADK,CAAP;AAQD,GATD;AAUD,CAXM;AAaP,OAAO,MAAMa,WAAW,GAAGV,OAAO,IAAI;AACpC,SAAOL,QAAQ,IAAI;AACjB,WAAOL,GAAG,CAACoB,WAAJ,CAAgBV,OAAhB,EAAyBJ,IAAzB,CAA8BI,OAAO,IAC1CV,GAAG,CAACG,aAAJ,CAAkBO,OAAO,CAACG,QAA1B,EAAoCP,IAApC,CAAyCC,QAAQ,IAC/CF,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,gBADC;AAEPM,MAAAA;AAFO,KAAD,CADV,CADK,CAAP;AAQD,GATD;AAUD,CAXM","sourcesContent":["import uuid from \"uuid\";\nimport * as api from'../http'\nexport const RECEIVE_COMMENTS = \"RECEIVE_COMMENTS\";\nexport const RECEIVE_COMMENT = \"RECEIVE_COMMENT\";\n\nexport const fetchComments = id => {\n  return dispatch => {\n    return api.fetchComments(id).then(comments =>\n      dispatch({\n        type: RECEIVE_COMMENTS,\n        comments\n      })\n    );\n  };\n};\n\nexport const fetchComment = id => {\n  return dispatch => {\n    return api.fetchComment(id).then(comment =>\n      dispatch({\n        type: RECEIVE_COMMENT,\n        comment\n      })\n    );\n  };\n};\n\nexport const voteComment = (id, option) => {\n  return dispatch => {\n    return api.voteComment(id, option).then(comment =>\n      api.fetchComments(comment.parentId).then(comments =>\n        dispatch({\n          type: RECEIVE_COMMENTS,\n          comments\n        })\n      )\n    );\n  };\n};\n\nexport const addComment = comment => {\n  comment = {\n    ...comment,\n    id: uuid.v4(),\n    timestamp: Date.now()\n  };\n \n  return dispatch => {\n    return api.addComment(comment).then(comment =>\n      api.fetchComments(comment.parentId).then(comments =>\n        dispatch({\n          type: RECEIVE_COMMENTS,\n          comments\n        })\n      )\n    );\n  };\n};\n\nexport const deleteComment = comment => {\n  return dispatch => {\n    return api.deleteComment(comment).then(comment =>\n      api.fetchComments(comment.parentId).then(comments =>\n        dispatch({\n          type: RECEIVE_COMMENTS,\n          comments\n        })\n      )\n    );\n  };\n};\n\nexport const editComment = comment => {\n  return dispatch => {\n    return api.editComment(comment).then(comment =>\n      api.fetchComments(comment.parentId).then(comments =>\n        dispatch({\n          type: RECEIVE_COMMENTS,\n          comments\n        })\n      )\n    );\n  };\n};"]},"metadata":{},"sourceType":"module"}