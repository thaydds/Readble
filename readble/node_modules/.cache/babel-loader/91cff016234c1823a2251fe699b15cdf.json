{"ast":null,"code":"var _jsxFileName = \"/home/thayrone/dev/Readble/leitura/src/components/Home.js\";\nimport React, { Component } from 'react';\nimport PostCard from './PostCard';\nimport { connect } from 'react-redux';\nimport { handleInitialData, deletePost, votePost } from '../actions/posts';\nimport Grid from '@material-ui/core/Grid';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport { fetchCategories } from '../actions/categories';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listByDate: false\n    };\n\n    this.ordemData = list => {\n      return list.sort((a, b) => b.timestamp - a.timestamp);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchPosts();\n    this.props.fetchCategories();\n  }\n\n  render() {\n    if (this.props.posts.lista) {\n      let listaOrdenada = this.props.posts.lista.map(l => l);\n      this.ordemData(listaOrdenada);\n      let listaDefault = this.props.posts.lista;\n\n      if (this.state.listByDate) {\n        listaDefault = listaOrdenada;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        style: {\n          marginTop: '5rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: () => this.setState({\n          listByDate: !this.state.listByDate\n        }),\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"List by Date\"), Object.values(this.props.categories).map(c => {\n        return React.createElement(Button, {\n          component: Link,\n          to: \"/\".concat(c.name),\n          key: c.name,\n          onClick: () => this.props.fetchPosts(c.name),\n          variant: \"contained\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, c.name);\n      }), React.createElement(Button, {\n        component: Link,\n        to: \"/\",\n        onClick: () => this.props.fetchPosts(),\n        variant: \"contained\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"ALL\"), listaDefault.map(post => {\n        return React.createElement(Grid, {\n          style: {\n            margin: '8px auto'\n          },\n          key: post.id,\n          item: true,\n          xs: 12,\n          md: 12,\n          lg: 5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(PostCard, {\n          votePost: this.props.votePost,\n          deletePost: this.props.deletePost,\n          post: post,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }));\n      }), React.createElement(Fab, {\n        component: Link,\n        to: \"/add\",\n        style: {\n          position: 'fixed',\n          bottom: '5px',\n          right: '5px',\n          margin: '8px auto'\n        },\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }))));\n    } else {\n      return \"Vazio\";\n    }\n  }\n\n}\n\nfunction mapStateToProps({\n  posts,\n  categories\n}) {\n  return {\n    posts: posts,\n    categories: categories\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchPosts: category => dispatch(handleInitialData(category)),\n  deletePost: id => dispatch(deletePost(id)),\n  votePost: (id, option) => dispatch(votePost(id, option)),\n  fetchCategories: () => dispatch(fetchCategories())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/home/thayrone/dev/Readble/leitura/src/components/Home.js"],"names":["React","Component","PostCard","connect","handleInitialData","deletePost","votePost","Grid","AddIcon","Fab","Link","Button","fetchCategories","Home","state","listByDate","ordemData","list","sort","a","b","timestamp","componentDidMount","props","fetchPosts","render","posts","lista","listaOrdenada","map","l","listaDefault","marginTop","setState","Object","values","categories","c","name","post","margin","id","position","bottom","right","mapStateToProps","mapDispatchToProps","dispatch","category","option"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PostCard from './PostCard'\nimport { connect } from 'react-redux'\nimport {handleInitialData, deletePost, votePost} from '../actions/posts'\nimport Grid from '@material-ui/core/Grid'\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport { fetchCategories} from '../actions/categories'\n\nclass Home extends Component {\n\n  state={\n    listByDate : false\n  }\n\n  componentDidMount(){\n    this.props.fetchPosts()\n    this.props.fetchCategories()\n  }\n  \n  ordemData = list => {\n    return list.sort((a, b) => b.timestamp - a.timestamp);\n  };\n  \n\n  render() {\n    if( this.props.posts.lista ) {\n\n      let listaOrdenada = this.props.posts.lista.map(l => l)\n      this.ordemData(listaOrdenada)\n      let listaDefault = this.props.posts.lista\n      \n      if(this.state.listByDate){\n       listaDefault = listaOrdenada;\n      }\n          return(\n            <div>\n              <Grid style={{marginTop:'5rem'}} >\n                <Button onClick={()=> this.setState({listByDate: !this.state.listByDate})} variant=\"contained\" color=\"primary\" >List by Date</Button>\n                {Object.values(this.props.categories).map(c => {\n                  return <Button component={Link} to={`/${c.name}`} key={c.name} onClick={()=> this.props.fetchPosts(c.name)} variant=\"contained\" color=\"secondary\" >{c.name}</Button>\n                })}\n               <Button component={Link} to={`/`}  onClick={()=> this.props.fetchPosts()} variant=\"contained\" color=\"secondary\" >ALL</Button>\n\n              {listaDefault.map ( post => {\n                return (\n                  <Grid style={{margin: '8px auto'}} key={post.id} item xs={12} md={12} lg={5}>\n                    <PostCard votePost={this.props.votePost} deletePost={this.props.deletePost}  post={post} />\n                </Grid>\n                )\n              })}\n              <Fab component={Link} to=\"/add\" style={{position: 'fixed',\n                            bottom: '5px',\n                            right: '5px',\n                            margin: '8px auto'}} color='primary'>\n                            <AddIcon />\n                </Fab>\n              </Grid>\n            </div> \n          )\n\n      } else {\n        return \"Vazio\"\n      }\n  }\n}\n\nfunction mapStateToProps ({ posts, categories }) {\n  return {\n    posts: posts,\n    categories: categories\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchPosts: category => dispatch(handleInitialData(category)),\n  deletePost: id => dispatch(deletePost(id)),  \n  votePost: (id, option) => dispatch(votePost(id, option)),\n  fetchCategories: () => dispatch(fetchCategories())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)((Home))\n"]},"metadata":{},"sourceType":"module"}