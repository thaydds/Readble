{"ast":null,"code":"var _jsxFileName = \"/home/thayrone/dev/Readble/leitura/src/components/FormPost.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addPost, fetchPost, editPost } from '../actions/posts';\nimport Grid from '@material-ui/core/Grid';\nimport AddIcon from '@material-ui/icons/Add';\nimport Edit from '@material-ui/icons/Edit';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport { fetchCategories } from '../actions/categories';\nimport Fab from '@material-ui/core/Fab';\nimport TextField from '@material-ui/core/TextField';\nimport uuid from \"uuid\";\nimport { withRouter, Link } from 'react-router-dom';\n\nclass FormPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      author: '',\n      title: '',\n      body: '',\n      category: 'react',\n      id: uuid.v4()\n    };\n\n    this.handleChange = (e, input) => {\n      this.setState({\n        [input]: e.target ? e.target.value : e\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.props.addPost(this.state);\n    };\n\n    this.handleSubmitEdit = () => {\n      console.log('STATE', this.state);\n      this.props.editPost(this.state);\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchCategories();\n    const pathArray = window.location.pathname.split('/');\n    const param = pathArray[pathArray.length - 1];\n\n    if (param !== 'add') {\n      this.props.fetchPost(param).then(() => {\n        this.updateForm();\n      });\n    }\n  }\n\n  updateForm() {\n    this.setState({\n      author: this.props.posts.post.author ? this.props.posts.post.author : '',\n      title: this.props.posts.post.title ? this.props.posts.post.title : '',\n      body: this.props.posts.post.body ? this.props.posts.post.body : '',\n      category: this.props.posts.post.category ? this.props.posts.post.category : '',\n      id: this.props.posts.post.id\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          author = _this$state.author,\n          body = _this$state.body,\n          category = _this$state.category;\n    const pathArray = window.location.pathname.split('/');\n    const param = pathArray[pathArray.length - 1];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      style: {\n        margin: '8px auto',\n        marginTop: 100\n      },\n      item: true,\n      sm: 12,\n      lg: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-name\",\n      label: \"Author\" //className={classes.textField}\n      ,\n      value: author //onChange={handleChange('name')}\n      ,\n      onChange: e => this.handleChange(e, \"author\"),\n      margin: \"normal\",\n      variant: \"outlined\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      style: {\n        margin: '8px auto'\n      },\n      item: true,\n      sm: 12,\n      lg: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-name\",\n      label: \"Title\",\n      onChange: e => this.handleChange(e, \"title\") //className={classes.textField}\n      ,\n      value: title //onChange={handleChange('name')}\n      ,\n      margin: \"normal\",\n      variant: \"outlined\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      style: {\n        margin: '8px auto'\n      },\n      item: true,\n      sm: 12,\n      lg: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-multiline-static\",\n      label: \"Body\",\n      multiline: true,\n      fullWidth: true,\n      onChange: e => this.handleChange(e, \"body\"),\n      rows: \"4\",\n      value: body //defaultValue=\"Default Value\"\n      //className={classes.textField}\n      ,\n      margin: \"normal\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      style: {\n        margin: '8px auto'\n      },\n      item: true,\n      sm: 12,\n      lg: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-select-currency-native\",\n      select: true,\n      onChange: e => this.handleChange(e, \"category\") // className={classes.textField}\n      // value={values.currency}\n      //onChange={handleChange('currency')}\n      ,\n      SelectProps: {\n        native: true\n      },\n      value: category,\n      margin: \"normal\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, Object.values(this.props.categories).map(option => React.createElement(\"option\", {\n      key: option.name,\n      value: option.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, option.name))))), param !== 'add' ? React.createElement(Fab, {\n      style: {\n        position: 'absolute',\n        bottom: '5px',\n        right: '5px',\n        margin: '8px auto'\n      },\n      color: \"primary\",\n      onClick: this.handleSubmitEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Edit, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })) : React.createElement(Fab, {\n      style: {\n        position: 'absolute',\n        bottom: '5px',\n        right: '5px',\n        margin: '8px auto'\n      },\n      color: \"primary\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(Fab, {\n      component: Link,\n      to: \"/\",\n      style: {\n        position: 'absolute',\n        bottom: '5px',\n        left: '5px',\n        margin: '8px auto'\n      },\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(ArrowBack, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps({\n  posts,\n  categories\n}) {\n  return {\n    posts: posts,\n    categories: categories\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addPost: post => dispatch(addPost(post)),\n  fetchPost: id => dispatch(fetchPost(id)),\n  editPost: id => dispatch(editPost(id)),\n  fetchCategories: () => dispatch(fetchCategories())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(FormPost));","map":{"version":3,"sources":["/home/thayrone/dev/Readble/leitura/src/components/FormPost.js"],"names":["React","Component","connect","addPost","fetchPost","editPost","Grid","AddIcon","Edit","ArrowBack","fetchCategories","Fab","TextField","uuid","withRouter","Link","FormPost","state","author","title","body","category","id","v4","handleChange","e","input","setState","target","value","handleSubmit","props","handleSubmitEdit","console","log","componentWillMount","pathArray","window","location","pathname","split","param","length","then","updateForm","posts","post","render","margin","marginTop","native","Object","values","categories","map","option","name","position","bottom","right","left","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux'\nimport { addPost, fetchPost, editPost} from '../actions/posts'\nimport Grid from '@material-ui/core/Grid'\nimport AddIcon from '@material-ui/icons/Add';\nimport Edit from '@material-ui/icons/Edit';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport {fetchCategories} from '../actions/categories'\nimport Fab from '@material-ui/core/Fab';\nimport TextField from '@material-ui/core/TextField';\nimport uuid from \"uuid\";\nimport {withRouter, Link} from 'react-router-dom'\n\n\nclass FormPost extends Component {\n  state = {\n    author: '',\n    title: '',\n    body: '',\n    category: 'react',\n    id: uuid.v4()\n  }\n\n  handleChange = (e, input) => {\n    this.setState({\n      [input]: e.target ? e.target.value : e\n    });\n  }\n\n  handleSubmit = () => {\n    this.props.addPost(this.state)\n  }\n\n  handleSubmitEdit = () => {\n    console.log('STATE', this.state)\n    this.props.editPost(this.state)\n  }\n\n  componentWillMount(){\n    this.props.fetchCategories()\n    const pathArray = window.location.pathname.split('/');\n    const param = pathArray[pathArray.length - 1];\n    if(param !== 'add'){\n      this.props.fetchPost(param).then(()=> {\n          this.updateForm()\n      })\n    }\n  }\n\n  updateForm(){\n    this.setState({\n      author:this.props.posts.post.author ?this.props.posts.post.author : '',\n      title:this.props.posts.post.title ?this.props.posts.post.title : '',\n      body:this.props.posts.post.body ?this.props.posts.post.body : '',\n      category:this.props.posts.post.category ?this.props.posts.post.category : '',\n      id: this.props.posts.post.id\n    })\n  }\n\n  render() {\n    const { title, author, body, category} = this.state\n    const pathArray = window.location.pathname.split('/');\n    const param = pathArray[pathArray.length - 1]; \n    return(\n      <div>\n        <Grid >\n        <Grid  style={{margin: '8px auto',  marginTop: 100}} item sm={12} lg={7}>\n        <TextField\n          id=\"outlined-name\"\n          label=\"Author\"\n          //className={classes.textField}\n          value={author}\n          //onChange={handleChange('name')}\n          onChange={e => this.handleChange(e, \"author\")}\n          margin=\"normal\"\n          variant=\"outlined\"\n          fullWidth\n          \n        />\n    </Grid>\n    <Grid  style={{margin: '8px auto'}} item sm={12} lg={7}>\n        <TextField\n          id=\"outlined-name\"\n          label=\"Title\"\n          onChange={e => this.handleChange(e, \"title\")}\n          //className={classes.textField}\n          value={title}\n          //onChange={handleChange('name')}\n          margin=\"normal\"\n          variant=\"outlined\"\n          fullWidth\n         \n        />\n    </Grid>\n    <Grid  style={{margin: '8px auto'}} item sm={12} lg={7}>\n    <TextField\n        id=\"outlined-multiline-static\"\n        label=\"Body\"\n        multiline\n        fullWidth\n        onChange={e => this.handleChange(e, \"body\")}\n        rows=\"4\"\n        value={body}\n        //defaultValue=\"Default Value\"\n        //className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n    </Grid>    \n    <Grid style={{margin: '8px auto'}} item sm={12} lg={7}>\n    <TextField\n        id=\"outlined-select-currency-native\"\n        select\n        onChange={e => this.handleChange(e, \"category\")}\n       // className={classes.textField}\n       // value={values.currency}\n        //onChange={handleChange('currency')}\n        SelectProps={{\n          native: true,\n\n        }}\n        value={category}\n        margin=\"normal\"\n        variant=\"outlined\"\n      >\n        {Object.values(this.props.categories).map(option => (\n          <option key={option.name} value={option.name}>\n            {option.name}\n          </option>\n        ))}\n    </TextField>\n    \n    </Grid>\n        </Grid>\n        {\n          param !== 'add'? \n          <Fab style={{position: 'absolute',\n          bottom: '5px',\n          right: '5px',\n          margin: '8px auto'}} color='primary' onClick={this.handleSubmitEdit}>\n          <Edit />\n</Fab> :\n<Fab style={{position: 'absolute',\n bottom: '5px',\n right: '5px',\n margin: '8px auto'}} color='primary' onClick={this.handleSubmit}>\n <AddIcon />\n</Fab>\n        }\n       \n       <Fab component={Link} to='/' style={{position: 'absolute',\n        bottom: '5px',\n        left: '5px',\n        margin: '8px auto'}} color='primary'>\n        <ArrowBack />\n        </Fab>\n      </div> \n    )\n  }\n}\n\nfunction mapStateToProps ({ posts, categories }) {\n  return {\n    posts: posts,\n    categories: categories\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addPost: post => dispatch(addPost(post)),\n  fetchPost: id => dispatch(fetchPost(id)),\n  editPost: id => dispatch(editPost(id)),\n  fetchCategories: () => dispatch(fetchCategories())\n  \n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(FormPost))"]},"metadata":{},"sourceType":"module"}