{"version":3,"sources":["components/Header.js","components/PostCard.js","http.js","actions/posts.js","App.js","reducers/index.js","reducers/posts.js","middlewares/logger.js","middlewares/index.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","react_default","a","createElement","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Menu_default","Typography","variant","card","minWidth","bullet","display","margin","transform","fontSize","pos","marginBottom","PostCard","props","post","Card","CardContent","gutterBottom","category","component","author","body","CardActions","Button","size","api","token","localStorage","Math","random","toString","substr","headers","Accept","Content-Type","Authorization","RECEIVE_POSTS","handleInitialData","dispatch","url","concat","fetch","then","res","json","data","getPosts","posts","type","receivePosts","App","this","components_Header","Grid","style","marginTop","Object","values","map","key","id","item","xs","md","lg","components_PostCard","Fab","bottom","right","Add_default","Component","connect","_ref","combineReducers","state","arguments","length","undefined","actions","objectSpread","logger","store","next","action","console","group","log","returnValue","getState","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.346b96da.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Leitura\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  card: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nfunction PostCard(props) {\n  const classes = useStyles();\n  const { post } = props\n  \n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          {post.category}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          {post.title}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {post.author}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n         {post.body}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default PostCard;\n","const api = \"http://localhost:3001\";\n\nlet token = localStorage.token;\nif (!token)\n  token = localStorage.token = Math.random()\n    .toString(36)\n    .substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  \"Content-Type\": \"application/json\",\n  Authorization: token\n};\n\nexport const getPosts = category => {\n  const url = category ? `${api}/${category}/posts` : `${api}/posts`;\n  return fetch(url, { headers })\n    .then(res => res.json())\n    .then(data => data);\n};\n","import { getPosts } from '../http'\n\n// actions variables\n\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS'\n\n// actions functions\n\nexport function receivePosts (posts) {\n\treturn {\n\ttype: RECEIVE_POSTS,\n\tposts\n}}\n\nexport const handleInitialData = category => {\n  return dispatch => {\n    return getPosts(category).then(posts =>\n      dispatch(receivePosts(posts))\n    );\n  };\n};","import React, {Component} from 'react';\nimport Header from './components/Header'\nimport PostCard from './components/PostCard'\nimport { connect } from 'react-redux'\nimport {handleInitialData} from './actions/posts'\nimport Grid from '@material-ui/core/Grid'\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\n\nclass App extends Component {\n\n  componentDidMount(){\n    this.props.dispatch(handleInitialData())\n  }\n\n  render() {\n    return(\n      <div>\n        <Header />\n        <Grid  spacing={2} style={{marginTop:'1rem'}} >\n        {Object.values(this.props.posts).map ( post => {\n          return (\n            <Grid style={{margin: '8px auto'}} key={post.id} item xs={12} md={12} lg={5}>\n              <PostCard  post={post} />\n           </Grid>\n          )\n        })}\n        <Fab style={{position: 'absolute',\n                      bottom: '5px',\n                      right: '5px',\n                      margin: '8px auto'}} color='primary'>\n                      <AddIcon />\n          </Fab>\n        </Grid>\n      \n      </div> \n    )\n  }\n}\n\nfunction mapStateToProps ({ posts }) {\n  return {\n    posts,\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux'\nimport posts from './posts'\n\nexport default combineReducers({\n  posts,\n})","import { RECEIVE_POSTS } from '../actions/posts'\n\nexport default function posts (state={}, actions) {\n  switch(actions.type){\n    case RECEIVE_POSTS :\n     return {...state,...actions.posts}\n    default:\n      return state\n  }\n}","const logger = (store) => (next) => (action) => {\n  console.group(action.type)\n    console.log('The action: ', action)\n    const returnValue = next(action)\n    console.log('The new state: ', store.getState())\n  console.groupEnd()\n  return returnValue\n}\n\nexport default logger","import thunk from 'redux-thunk'\nimport logger from './logger'\nimport { applyMiddleware } from 'redux'\n\nexport default applyMiddleware(\n  thunk,\n  logger,\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux'; \nimport { Provider } from 'react-redux';\nimport reducer from './reducers'\nimport middleware from './middlewares'\n\nconst store = createStore(reducer, middleware)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root'));\n\n\n"],"sourceRoot":""}